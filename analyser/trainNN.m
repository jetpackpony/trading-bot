function [err, precision, recall,...
          fScore, expProfit, profitPerDay] = trainNN(
                    input_layer_size,
                    hidden_layer_size,
                    num_labels,
                    iterations,
                    lambda,
                    xtrain, ytrain,
                    xcv, ycv,
                    topPercent, bottomPercent,
                    dealsPerDay
                    )
%{
input_layer_size  = windowSize;
hidden_layer_size = 25;
num_labels = 1;
iterations = 500;
lambda = 0.1;
%}




initial_Theta1 = randInitializeWeights(...
                          input_layer_size, hidden_layer_size);
initial_Theta2 = randInitializeWeights(...
                                hidden_layer_size, num_labels);
initial_nn_params = [initial_Theta1(:) ; initial_Theta2(:)];

options = optimset('MaxIter', iterations);
costFunction = @(p) nnCostFunction(p, ...
                                   input_layer_size, ...
                                   hidden_layer_size, ...
                                   num_labels, ...
                                   xtrain, ytrain, lambda);
[nn_params, cost] = fmincg(costFunction,...
                              initial_nn_params, options);

theta1 = reshape(nn_params(1:hidden_layer_size * ...
                      (input_layer_size + 1)),...
                      hidden_layer_size, ...
                      (input_layer_size + 1));
theta2 = reshape(nn_params((1 + (hidden_layer_size * ...
                      (input_layer_size + 1))):end), ...
                      num_labels, (hidden_layer_size + 1));

[predictions] = nnPredict(theta1, theta2, xcv);

err = mean(double(predictions ~= ycv));
[precision, recall, fScore] =...
              precisionRecall(predictions, ycv);
expProfit = expectedProfit(topPercent, ...
              bottomPercent, precision, ...
              recall);

profitPerDay = profitPerDay(...
              size(find(predictions == 1), 1),...
              size(find(ycv == 1), 1), dealsPerDay,...
              expProfit);

endfunction
